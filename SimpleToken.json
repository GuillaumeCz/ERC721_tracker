{
  "contractName": "SimpleToken",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_details",
          "type": "string"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSimpleToken",
      "outputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "uint256"
            },
            {
              "name": "from",
              "type": "address"
            },
            {
              "name": "to",
              "type": "address"
            },
            {
              "name": "details",
              "type": "string"
            }
          ],
          "name": "token",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getSimpleToken\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"details\",\"type\":\"string\"}],\"name\":\"token\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/paf/Documents/wtf/ERC721/contracts/SimpleToken.sol\":\"SimpleToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/paf/Documents/wtf/ERC721/contracts/SimpleToken.sol\":{\"keccak256\":\"0x2bef8e0c187e25e6d0339edccd78e6e4b1cd66e51d79844cf3b70d36ccba4057\",\"urls\":[\"bzzr://edbdec787677b493feaadbf83c5f3e278f4d2d27323bb914eef45298aab06c56\"]},\"/home/paf/Documents/wtf/ERC721/contracts/roles/AdminRole.sol\":{\"keccak256\":\"0x4e3831e1956bd77710d2d803baeca0beb4e44c6d9551c30a31b725f2b611f01b\",\"urls\":[\"bzzr://d4e9670c3417e50e573f96a19f0144995345842c7ddfa12a55900087303ed0c2\"]},\"/home/paf/Documents/wtf/ERC721/contracts/roles/UserRole.sol\":{\"keccak256\":\"0x99432fe124e91a30d7d7590f73eae025f47dcdc8baa9c3ab86654a9131830ef9\",\"urls\":[\"bzzr://bc6489d3e0e25d6146aff1fd5687210d3be72523810abafd33576431f9d10b10\"]},\"/home/paf/Documents/wtf/ERC721/contracts/simple-token/BasicSimpleToken.sol\":{\"keccak256\":\"0x5f0c5a423816d37f39af6f3969fcfb652e4dce428f330d93207166157a958bc6\",\"urls\":[\"bzzr://48b944de5bc78ff1fb53b1a60e7a6ef97b453610a2287097f915e4d430e3a920\"]},\"/home/paf/Documents/wtf/ERC721/contracts/simple-token/MintableBurnableSimpleToken.sol\":{\"keccak256\":\"0x75f9c4fe964627d40836a128879d6586b66abe51b32b39f7ac8e3fb8632b458f\",\"urls\":[\"bzzr://4c7e71ac8dd5ba140ff49d02e46f800618f267a180a76b42cd0282a1fbc2f90a\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzzr://da1a56c4891c4d01514d16a3d5535ca00ba5754ea23a5b9f59be788b8e99ce92\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzzr://07dffd4225b87bb0aa8d02cfdb04640c2e02e59b35143accd0dd757775449c61\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x250605d58768f7b91ca896baa3001f0109d1c2dd071e97edfd6d9c0ca354a49a\",\"urls\":[\"bzzr://9e2f855cbfc319721a34811ad7881c3b59a5ad5cf63bd8b219dc1a36dde9b3e3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzzr://be001877b93536bd80b4ebf39bf5cd56ae5c294ffe5f35c34e26123646782562\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xb62b21b93eaf635c372306f05e273a404ae263d14c4e1e4217daf731254edc84\",\"urls\":[\"bzzr://79fca89f6d5481c322917f7c1e9037e98f7a97f8002611ae67f5df36b14d411e\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzzr://8a586d8fd1e36ecb1bebccdd5969e38fbf7d435cf9703ffc9647be8c97bf0d31\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzzr://cd04ca8d050befdf06ac93c2f6f5ea7250d2199b44aecbe54ded512e823f711a\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f53696d706c65546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f7370546b6e000000000000000000000000000000000000000000000000000000815250620000966301ffc9a760e01b6200013a60201b60201c565b620000ae6380ac58cd60e01b6200013a60201b60201c565b8160059080519060200190620000c692919062000452565b508060069080519060200190620000df92919062000452565b50620000f8635b5e139f60e01b6200013a60201b60201c565b50506200011263780e9d6360e01b6200013a60201b60201c565b62000123336200021260201b60201c565b62000134336200027360201b60201c565b62000664565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019d906200060f565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200022d81600e620002d460201b620020c51790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f19ef9a4877199f89440a26acb26895ec02ed86f2df1aeaa90dc18041b892f71f60405160405180910390a250565b6200028e81600f620002d460201b620020c51790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b620002e682826200038760201b60201c565b1562000329576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032090620005ed565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003f29062000631565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049557805160ff1916838001178555620004c6565b82800160010185558215620004c6579182015b82811115620004c5578251825591602001919060010190620004a8565b5b509050620004d59190620004d9565b5090565b620004fe91905b80821115620004fa576000816000905550600101620004e0565b5090565b90565b600062000510601f8362000653565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b600062000552601c8362000653565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006200059460228362000653565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620006088162000501565b9050919050565b600060208201905081810360008301526200062a8162000543565b9050919050565b600060208201905081810360008301526200064c8162000585565b9050919050565b600082825260208201905092915050565b613dc080620006746000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80634f6ccce7116100f95780639857518811610097578063b88d4fde11610071578063b88d4fde146104ee578063c87b56dd1461050a578063e2bbdb261461053a578063e985e9c51461056a576101a9565b80639857518814610486578063a22cb465146104a2578063a69f5807146104be576101a9565b806370480275116100d357806370480275146103fe57806370a082311461041a5780638ada066e1461044a57806395d89b4114610468576101a9565b80634f6ccce714610382578063551026bb146103b25780636352211e146103ce576101a9565b806323b872dd116101665780634209fff1116101405780634209fff1146102fe578063421b2d8b1461032e57806342842e0e1461034a57806342966c6814610366576101a9565b806323b872dd1461028257806324d7806c1461029e5780632f745c59146102ce576101a9565b806301ffc9a7146101ae57806306fdde03146101de578063081812fc146101fc578063095ea7b31461022c5780631785f53c1461024857806318160ddd14610264575b600080fd5b6101c860048036036101c39190810190612e04565b61059a565b6040516101d5919061382e565b60405180910390f35b6101e6610601565b6040516101f39190613849565b60405180910390f35b61021660048036036102119190810190612e56565b6106a3565b60405161022391906137c7565b60405180910390f35b61024660048036036102419190810190612dc8565b610728565b005b610262600480360361025d9190810190612bf6565b6108e3565b005b61026c610937565b6040516102799190613b4d565b60405180910390f35b61029c60048036036102979190810190612cc2565b610944565b005b6102b860048036036102b39190810190612bf6565b6109a4565b6040516102c5919061382e565b60405180910390f35b6102e860048036036102e39190810190612dc8565b6109c1565b6040516102f59190613b4d565b60405180910390f35b61031860048036036103139190810190612bf6565b610a6a565b604051610325919061382e565b60405180910390f35b61034860048036036103439190810190612bf6565b610a87565b005b610364600480360361035f9190810190612cc2565b610adb565b005b610380600480360361037b9190810190612e56565b610afb565b005b61039c60048036036103979190810190612e56565b610bd5565b6040516103a99190613b4d565b60405180910390f35b6103cc60048036036103c79190810190612dc8565b610c3f565b005b6103e860048036036103e39190810190612e56565b610c96565b6040516103f591906137c7565b60405180910390f35b61041860048036036104139190810190612bf6565b610d48565b005b610434600480360361042f9190810190612bf6565b610da5565b6040516104419190613b4d565b60405180910390f35b610452610e64565b60405161045f9190613b4d565b60405180910390f35b610470610e75565b60405161047d9190613849565b60405180910390f35b6104a0600480360361049b9190810190612bf6565b610f17565b005b6104bc60048036036104b79190810190612d8c565b610f6b565b005b6104d860048036036104d39190810190612e56565b6110ec565b6040516104e59190613b2b565b60405180910390f35b61050860048036036105039190810190612d11565b6112d0565b005b610524600480360361051f9190810190612e56565b611332565b6040516105319190613849565b60405180910390f35b610554600480360361054f9190810190612c5b565b61142f565b6040516105619190613b4d565b60405180910390f35b610584600480360361057f9190810190612c1f565b611674565b604051610591919061382e565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106995780601f1061066e57610100808354040283529160200191610699565b820191906000526020600020905b81548152906001019060200180831161067c57829003601f168201915b5050505050905090565b60006106ae82611708565b6106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e490613a0b565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061073382610c96565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90613aab565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107c361177a565b73ffffffffffffffffffffffffffffffffffffffff1614806107f257506107f1816107ec61177a565b611674565b5b610831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108289061396b565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108ec336109a4565b61092b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109229061388b565b60405180910390fd5b61093481611782565b50565b6000600a80549050905090565b61095561094f61177a565b826117dc565b610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90613acb565b60405180910390fd5b61099f8383836118ba565b505050565b60006109ba82600f6118de90919063ffffffff16565b9050919050565b60006109cc83610da5565b8210610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a04906138ab565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a5757fe5b9060005260206000200154905092915050565b6000610a8082600e6118de90919063ffffffff16565b9050919050565b610a90336109a4565b610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac69061388b565b60405180910390fd5b610ad8816119a6565b50565b610af6838383604051806020016040528060008152506112d0565b505050565b610b04336109a4565b610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a9061388b565b60405180910390fd5b610b4c81611a00565b600d60008281526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000610bc6919061297d565b5050610bd2600c611a15565b50565b6000610bdf610937565b8210610c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1790613aeb565b60405180910390fd5b600a8281548110610c2d57fe5b90600052602060002001549050919050565b610c4833610a6a565b610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e90613a8b565b60405180910390fd5b610c92338383610adb565b5050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d36906139ab565b60405180910390fd5b80915050919050565b610d51336109a4565b610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d879061388b565b60405180910390fd5b610d9981611a38565b610da2816119a6565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0d9061398b565b60405180910390fd5b610e5d600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a92565b9050919050565b6000610e70600c611a92565b905090565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f0d5780601f10610ee257610100808354040283529160200191610f0d565b820191906000526020600020905b815481529060010190602001808311610ef057829003601f168201915b5050505050905090565b610f20336109a4565b610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f569061388b565b60405180910390fd5b610f6881611aa0565b50565b610f7361177a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd89061392b565b60405180910390fd5b8060046000610fee61177a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661109b61177a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110e0919061382e565b60405180910390a35050565b6110f46129c5565b816000611100336109a4565b905060003373ffffffffffffffffffffffffffffffffffffffff1661112484610c96565b73ffffffffffffffffffffffffffffffffffffffff161490508180611147575080155b61115057600080fd5b600d6000868152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112bd5780601f10611292576101008083540402835291602001916112bd565b820191906000526020600020905b8154815290600101906020018083116112a057829003601f168201915b5050505050815250509350505050919050565b6112e16112db61177a565b836117dc565b611320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131790613acb565b60405180910390fd5b61132c84848484611afa565b50505050565b606061133d82611708565b61137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137390613a6b565b60405180910390fd5b600760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114235780601f106113f857610100808354040283529160200191611423565b820191906000526020600020905b81548152906001019060200180831161140657829003601f168201915b50505050509050919050565b600061143a336109a4565b611479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114709061388b565b60405180910390fd5b8361148e81600e6118de90919063ffffffff16565b6114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c490613a8b565b60405180910390fd5b836114e281600e6118de90919063ffffffff16565b611521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151890613a8b565b60405180910390fd5b600061152d600c611a92565b90506115398782611b56565b6115416129c5565b60405180608001604052808381526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815250905080600d60008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019080519060200190611658929190612a19565b50905050611666600c611b74565b819450505050509392505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b61179681600f611b8a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b60006117e782611708565b611826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181d9061394b565b60405180910390fd5b600061183183610c96565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118a057508373ffffffffffffffffffffffffffffffffffffffff16611888846106a3565b73ffffffffffffffffffffffffffffffffffffffff16145b806118b157506118b08185611674565b5b91505092915050565b6118c5838383611c31565b6118cf8382611e60565b6118d98282611ffe565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561194f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194690613a2b565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6119ba81600e6120c590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f19ef9a4877199f89440a26acb26895ec02ed86f2df1aeaa90dc18041b892f71f60405160405180910390a250565b611a12611a0c82610c96565b8261216d565b50565b611a2d600182600001546121a790919063ffffffff16565b816000018190555050565b611a4c81600f6120c590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b600081600001549050919050565b611ab481600e611b8a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe9dce8c992623ce791725b21e857e33248d1f190a25b5168313420eebdaae99d60405160405180910390a250565b611b058484846118ba565b611b11848484846121f1565b611b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b47906138cb565b60405180910390fd5b50505050565b611b7082826040518060200160405280600081525061230f565b5050565b6001816000016000828254019250508190555050565b611b9482826118de565b611bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bca906139cb565b60405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff16611c5182610c96565b73ffffffffffffffffffffffffffffffffffffffff1614611ca7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9e90613a4b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0e9061390b565b60405180910390fd5b611d208161236a565b611d67600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a15565b611dae600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b74565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611eb86001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506121a790919063ffffffff16565b9050600060096000848152602001908152602001600020549050818114611fa5576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f2557fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f7d57fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550505b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ff79190612a99565b5050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506009600083815260200190815260200160002081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6120cf82826118de565b1561210f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121069061386b565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6121778282612428565b6121818282611e60565b600060096000838152602001908152602001600020819055506121a381612485565b5050565b60006121e983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061253f565b905092915050565b60006122128473ffffffffffffffffffffffffffffffffffffffff1661259a565b61221f5760019050612307565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261224561177a565b8887876040518563ffffffff1660e01b815260040161226794939291906137e2565b602060405180830381600087803b15801561228157600080fd5b505af1158015612295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122b99190810190612e2d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b61231983836125e5565b61232660008484846121f1565b612365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235c906138cb565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124255760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6124328282612606565b6000600760008381526020019081526020016000208054600181600116156101000203166002900490501461248157600760008281526020019081526020016000206000612480919061297d565b5b5050565b60006124a06001600a805490506121a790919063ffffffff16565b90506000600b60008481526020019081526020016000205490506000600a83815481106124c957fe5b9060005260206000200154905080600a83815481106124e457fe5b906000526020600020018190555081600b600083815260200190815260200160002081905550600a80548091906001900361251f9190612a99565b506000600b60008681526020019081526020016000208190555050505050565b6000838311158290612587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257e9190613849565b60405180910390fd5b5060008385039050809150509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156125dc5750808214155b92505050919050565b6125ef828261277f565b6125f98282611ffe565b61260281612931565b5050565b8173ffffffffffffffffffffffffffffffffffffffff1661262682610c96565b73ffffffffffffffffffffffffffffffffffffffff161461267c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267390613b0b565b60405180910390fd5b6126858161236a565b6126cc600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a15565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156127ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127e6906139eb565b60405180910390fd5b6127f881611708565b15612838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161282f906138eb565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128d1600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b74565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b50805460018160011615610100020316600290046000825580601f106129a357506129c2565b601f0160209004906000526020600020908101906129c19190612ac5565b5b50565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a5a57805160ff1916838001178555612a88565b82800160010185558215612a88579182015b82811115612a87578251825591602001919060010190612a6c565b5b509050612a959190612ac5565b5090565b815481835581811115612ac057818360005260206000209182019101612abf9190612ac5565b5b505050565b612ae791905b80821115612ae3576000816000905550600101612acb565b5090565b90565b6000612af68235613c89565b905092915050565b6000612b0a8235613c9b565b905092915050565b6000612b1e8235613ca7565b905092915050565b6000612b328251613ca7565b905092915050565b600082601f830112612b4b57600080fd5b8135612b5e612b5982613b95565b613b68565b91508082526020830160208301858383011115612b7a57600080fd5b612b85838284613d33565b50505092915050565b600082601f830112612b9f57600080fd5b8135612bb2612bad82613bc1565b613b68565b91508082526020830160208301858383011115612bce57600080fd5b612bd9838284613d33565b50505092915050565b6000612bee8235613cf3565b905092915050565b600060208284031215612c0857600080fd5b6000612c1684828501612aea565b91505092915050565b60008060408385031215612c3257600080fd5b6000612c4085828601612aea565b9250506020612c5185828601612aea565b9150509250929050565b600080600060608486031215612c7057600080fd5b6000612c7e86828701612aea565b9350506020612c8f86828701612aea565b925050604084013567ffffffffffffffff811115612cac57600080fd5b612cb886828701612b8e565b9150509250925092565b600080600060608486031215612cd757600080fd5b6000612ce586828701612aea565b9350506020612cf686828701612aea565b9250506040612d0786828701612be2565b9150509250925092565b60008060008060808587031215612d2757600080fd5b6000612d3587828801612aea565b9450506020612d4687828801612aea565b9350506040612d5787828801612be2565b925050606085013567ffffffffffffffff811115612d7457600080fd5b612d8087828801612b3a565b91505092959194509250565b60008060408385031215612d9f57600080fd5b6000612dad85828601612aea565b9250506020612dbe85828601612afe565b9150509250929050565b60008060408385031215612ddb57600080fd5b6000612de985828601612aea565b9250506020612dfa85828601612be2565b9150509250929050565b600060208284031215612e1657600080fd5b6000612e2484828501612b12565b91505092915050565b600060208284031215612e3f57600080fd5b6000612e4d84828501612b26565b91505092915050565b600060208284031215612e6857600080fd5b6000612e7684828501612be2565b91505092915050565b612e8881613cfd565b82525050565b612e9781613c41565b82525050565b612ea681613c41565b82525050565b612eb581613c53565b82525050565b6000612ec682613bed565b612ed08185613c0e565b9350612ee0818560208601613d42565b612ee981613d75565b840191505092915050565b6000612eff82613c03565b612f098185613c30565b9350612f19818560208601613d42565b612f2281613d75565b840191505092915050565b6000612f3882613bf8565b612f428185613c1f565b9350612f52818560208601613d42565b612f5b81613d75565b840191505092915050565b6000612f73601f83613c30565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b6000612fb3601883613c30565b91507f444f45535f4e4f545f484156455f41444d494e5f524f4c4500000000000000006000830152602082019050919050565b6000612ff3602b83613c30565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b6000613059603283613c30565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006130bf601c83613c30565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006130ff602483613c30565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613165601983613c30565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006131a5602c83613c30565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061320b603883613c30565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613271602a83613c30565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006132d7602983613c30565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061333d602183613c30565b91507f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006133a3602083613c30565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006133e3602c83613c30565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000613449602283613c30565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006134af602983613c30565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613515602f83613c30565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b600061357b601783613c30565b91507f444f45535f4e4f545f484156455f555345525f524f4c450000000000000000006000830152602082019050919050565b60006135bb602183613c30565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613621603183613c30565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613687602c83613c30565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b60006136ed602583613c30565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060808301600083015161375e60008601826137a9565b5060208301516137716020860182612e8e565b5060408301516137846040860182612e8e565b506060830151848203606086015261379c8282612f2d565b9150508091505092915050565b6137b281613c7f565b82525050565b6137c181613c7f565b82525050565b60006020820190506137dc6000830184612e9d565b92915050565b60006080820190506137f76000830187612e7f565b6138046020830186612e9d565b61381160408301856137b8565b81810360608301526138238184612ebb565b905095945050505050565b60006020820190506138436000830184612eac565b92915050565b600060208201905081810360008301526138638184612ef4565b905092915050565b6000602082019050818103600083015261388481612f66565b9050919050565b600060208201905081810360008301526138a481612fa6565b9050919050565b600060208201905081810360008301526138c481612fe6565b9050919050565b600060208201905081810360008301526138e48161304c565b9050919050565b60006020820190508181036000830152613904816130b2565b9050919050565b60006020820190508181036000830152613924816130f2565b9050919050565b6000602082019050818103600083015261394481613158565b9050919050565b6000602082019050818103600083015261396481613198565b9050919050565b60006020820190508181036000830152613984816131fe565b9050919050565b600060208201905081810360008301526139a481613264565b9050919050565b600060208201905081810360008301526139c4816132ca565b9050919050565b600060208201905081810360008301526139e481613330565b9050919050565b60006020820190508181036000830152613a0481613396565b9050919050565b60006020820190508181036000830152613a24816133d6565b9050919050565b60006020820190508181036000830152613a448161343c565b9050919050565b60006020820190508181036000830152613a64816134a2565b9050919050565b60006020820190508181036000830152613a8481613508565b9050919050565b60006020820190508181036000830152613aa48161356e565b9050919050565b60006020820190508181036000830152613ac4816135ae565b9050919050565b60006020820190508181036000830152613ae481613614565b9050919050565b60006020820190508181036000830152613b048161367a565b9050919050565b60006020820190508181036000830152613b24816136e0565b9050919050565b60006020820190508181036000830152613b458184613746565b905092915050565b6000602082019050613b6260008301846137b8565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613b8b57600080fd5b8060405250919050565b600067ffffffffffffffff821115613bac57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613bd857600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613c4c82613c5f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613c9482613cd3565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613d0882613d0f565b9050919050565b6000613d1a82613d21565b9050919050565b6000613d2c82613c5f565b9050919050565b82818337600083830152505050565b60005b83811015613d60578082015181840152602081019050613d45565b83811115613d6f576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820517bdcae0b30f35614c79883a0aa0d41f900e66f05b3a7c77e30fabea61f550a6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c80634f6ccce7116100f95780639857518811610097578063b88d4fde11610071578063b88d4fde146104ee578063c87b56dd1461050a578063e2bbdb261461053a578063e985e9c51461056a576101a9565b80639857518814610486578063a22cb465146104a2578063a69f5807146104be576101a9565b806370480275116100d357806370480275146103fe57806370a082311461041a5780638ada066e1461044a57806395d89b4114610468576101a9565b80634f6ccce714610382578063551026bb146103b25780636352211e146103ce576101a9565b806323b872dd116101665780634209fff1116101405780634209fff1146102fe578063421b2d8b1461032e57806342842e0e1461034a57806342966c6814610366576101a9565b806323b872dd1461028257806324d7806c1461029e5780632f745c59146102ce576101a9565b806301ffc9a7146101ae57806306fdde03146101de578063081812fc146101fc578063095ea7b31461022c5780631785f53c1461024857806318160ddd14610264575b600080fd5b6101c860048036036101c39190810190612e04565b61059a565b6040516101d5919061382e565b60405180910390f35b6101e6610601565b6040516101f39190613849565b60405180910390f35b61021660048036036102119190810190612e56565b6106a3565b60405161022391906137c7565b60405180910390f35b61024660048036036102419190810190612dc8565b610728565b005b610262600480360361025d9190810190612bf6565b6108e3565b005b61026c610937565b6040516102799190613b4d565b60405180910390f35b61029c60048036036102979190810190612cc2565b610944565b005b6102b860048036036102b39190810190612bf6565b6109a4565b6040516102c5919061382e565b60405180910390f35b6102e860048036036102e39190810190612dc8565b6109c1565b6040516102f59190613b4d565b60405180910390f35b61031860048036036103139190810190612bf6565b610a6a565b604051610325919061382e565b60405180910390f35b61034860048036036103439190810190612bf6565b610a87565b005b610364600480360361035f9190810190612cc2565b610adb565b005b610380600480360361037b9190810190612e56565b610afb565b005b61039c60048036036103979190810190612e56565b610bd5565b6040516103a99190613b4d565b60405180910390f35b6103cc60048036036103c79190810190612dc8565b610c3f565b005b6103e860048036036103e39190810190612e56565b610c96565b6040516103f591906137c7565b60405180910390f35b61041860048036036104139190810190612bf6565b610d48565b005b610434600480360361042f9190810190612bf6565b610da5565b6040516104419190613b4d565b60405180910390f35b610452610e64565b60405161045f9190613b4d565b60405180910390f35b610470610e75565b60405161047d9190613849565b60405180910390f35b6104a0600480360361049b9190810190612bf6565b610f17565b005b6104bc60048036036104b79190810190612d8c565b610f6b565b005b6104d860048036036104d39190810190612e56565b6110ec565b6040516104e59190613b2b565b60405180910390f35b61050860048036036105039190810190612d11565b6112d0565b005b610524600480360361051f9190810190612e56565b611332565b6040516105319190613849565b60405180910390f35b610554600480360361054f9190810190612c5b565b61142f565b6040516105619190613b4d565b60405180910390f35b610584600480360361057f9190810190612c1f565b611674565b604051610591919061382e565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106995780601f1061066e57610100808354040283529160200191610699565b820191906000526020600020905b81548152906001019060200180831161067c57829003601f168201915b5050505050905090565b60006106ae82611708565b6106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e490613a0b565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061073382610c96565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90613aab565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107c361177a565b73ffffffffffffffffffffffffffffffffffffffff1614806107f257506107f1816107ec61177a565b611674565b5b610831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108289061396b565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108ec336109a4565b61092b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109229061388b565b60405180910390fd5b61093481611782565b50565b6000600a80549050905090565b61095561094f61177a565b826117dc565b610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90613acb565b60405180910390fd5b61099f8383836118ba565b505050565b60006109ba82600f6118de90919063ffffffff16565b9050919050565b60006109cc83610da5565b8210610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a04906138ab565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a5757fe5b9060005260206000200154905092915050565b6000610a8082600e6118de90919063ffffffff16565b9050919050565b610a90336109a4565b610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac69061388b565b60405180910390fd5b610ad8816119a6565b50565b610af6838383604051806020016040528060008152506112d0565b505050565b610b04336109a4565b610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a9061388b565b60405180910390fd5b610b4c81611a00565b600d60008281526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000610bc6919061297d565b5050610bd2600c611a15565b50565b6000610bdf610937565b8210610c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1790613aeb565b60405180910390fd5b600a8281548110610c2d57fe5b90600052602060002001549050919050565b610c4833610a6a565b610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e90613a8b565b60405180910390fd5b610c92338383610adb565b5050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d36906139ab565b60405180910390fd5b80915050919050565b610d51336109a4565b610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d879061388b565b60405180910390fd5b610d9981611a38565b610da2816119a6565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0d9061398b565b60405180910390fd5b610e5d600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a92565b9050919050565b6000610e70600c611a92565b905090565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f0d5780601f10610ee257610100808354040283529160200191610f0d565b820191906000526020600020905b815481529060010190602001808311610ef057829003601f168201915b5050505050905090565b610f20336109a4565b610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f569061388b565b60405180910390fd5b610f6881611aa0565b50565b610f7361177a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd89061392b565b60405180910390fd5b8060046000610fee61177a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661109b61177a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110e0919061382e565b60405180910390a35050565b6110f46129c5565b816000611100336109a4565b905060003373ffffffffffffffffffffffffffffffffffffffff1661112484610c96565b73ffffffffffffffffffffffffffffffffffffffff161490508180611147575080155b61115057600080fd5b600d6000868152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112bd5780601f10611292576101008083540402835291602001916112bd565b820191906000526020600020905b8154815290600101906020018083116112a057829003601f168201915b5050505050815250509350505050919050565b6112e16112db61177a565b836117dc565b611320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131790613acb565b60405180910390fd5b61132c84848484611afa565b50505050565b606061133d82611708565b61137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137390613a6b565b60405180910390fd5b600760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114235780601f106113f857610100808354040283529160200191611423565b820191906000526020600020905b81548152906001019060200180831161140657829003601f168201915b50505050509050919050565b600061143a336109a4565b611479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114709061388b565b60405180910390fd5b8361148e81600e6118de90919063ffffffff16565b6114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c490613a8b565b60405180910390fd5b836114e281600e6118de90919063ffffffff16565b611521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151890613a8b565b60405180910390fd5b600061152d600c611a92565b90506115398782611b56565b6115416129c5565b60405180608001604052808381526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815250905080600d60008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019080519060200190611658929190612a19565b50905050611666600c611b74565b819450505050509392505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b61179681600f611b8a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b60006117e782611708565b611826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181d9061394b565b60405180910390fd5b600061183183610c96565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118a057508373ffffffffffffffffffffffffffffffffffffffff16611888846106a3565b73ffffffffffffffffffffffffffffffffffffffff16145b806118b157506118b08185611674565b5b91505092915050565b6118c5838383611c31565b6118cf8382611e60565b6118d98282611ffe565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561194f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194690613a2b565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6119ba81600e6120c590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f19ef9a4877199f89440a26acb26895ec02ed86f2df1aeaa90dc18041b892f71f60405160405180910390a250565b611a12611a0c82610c96565b8261216d565b50565b611a2d600182600001546121a790919063ffffffff16565b816000018190555050565b611a4c81600f6120c590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b600081600001549050919050565b611ab481600e611b8a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe9dce8c992623ce791725b21e857e33248d1f190a25b5168313420eebdaae99d60405160405180910390a250565b611b058484846118ba565b611b11848484846121f1565b611b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b47906138cb565b60405180910390fd5b50505050565b611b7082826040518060200160405280600081525061230f565b5050565b6001816000016000828254019250508190555050565b611b9482826118de565b611bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bca906139cb565b60405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff16611c5182610c96565b73ffffffffffffffffffffffffffffffffffffffff1614611ca7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9e90613a4b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0e9061390b565b60405180910390fd5b611d208161236a565b611d67600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a15565b611dae600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b74565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611eb86001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506121a790919063ffffffff16565b9050600060096000848152602001908152602001600020549050818114611fa5576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f2557fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f7d57fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550505b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ff79190612a99565b5050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506009600083815260200190815260200160002081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6120cf82826118de565b1561210f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121069061386b565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6121778282612428565b6121818282611e60565b600060096000838152602001908152602001600020819055506121a381612485565b5050565b60006121e983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061253f565b905092915050565b60006122128473ffffffffffffffffffffffffffffffffffffffff1661259a565b61221f5760019050612307565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261224561177a565b8887876040518563ffffffff1660e01b815260040161226794939291906137e2565b602060405180830381600087803b15801561228157600080fd5b505af1158015612295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122b99190810190612e2d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b61231983836125e5565b61232660008484846121f1565b612365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235c906138cb565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124255760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6124328282612606565b6000600760008381526020019081526020016000208054600181600116156101000203166002900490501461248157600760008281526020019081526020016000206000612480919061297d565b5b5050565b60006124a06001600a805490506121a790919063ffffffff16565b90506000600b60008481526020019081526020016000205490506000600a83815481106124c957fe5b9060005260206000200154905080600a83815481106124e457fe5b906000526020600020018190555081600b600083815260200190815260200160002081905550600a80548091906001900361251f9190612a99565b506000600b60008681526020019081526020016000208190555050505050565b6000838311158290612587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257e9190613849565b60405180910390fd5b5060008385039050809150509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156125dc5750808214155b92505050919050565b6125ef828261277f565b6125f98282611ffe565b61260281612931565b5050565b8173ffffffffffffffffffffffffffffffffffffffff1661262682610c96565b73ffffffffffffffffffffffffffffffffffffffff161461267c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267390613b0b565b60405180910390fd5b6126858161236a565b6126cc600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a15565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156127ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127e6906139eb565b60405180910390fd5b6127f881611708565b15612838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161282f906138eb565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128d1600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b74565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b50805460018160011615610100020316600290046000825580601f106129a357506129c2565b601f0160209004906000526020600020908101906129c19190612ac5565b5b50565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a5a57805160ff1916838001178555612a88565b82800160010185558215612a88579182015b82811115612a87578251825591602001919060010190612a6c565b5b509050612a959190612ac5565b5090565b815481835581811115612ac057818360005260206000209182019101612abf9190612ac5565b5b505050565b612ae791905b80821115612ae3576000816000905550600101612acb565b5090565b90565b6000612af68235613c89565b905092915050565b6000612b0a8235613c9b565b905092915050565b6000612b1e8235613ca7565b905092915050565b6000612b328251613ca7565b905092915050565b600082601f830112612b4b57600080fd5b8135612b5e612b5982613b95565b613b68565b91508082526020830160208301858383011115612b7a57600080fd5b612b85838284613d33565b50505092915050565b600082601f830112612b9f57600080fd5b8135612bb2612bad82613bc1565b613b68565b91508082526020830160208301858383011115612bce57600080fd5b612bd9838284613d33565b50505092915050565b6000612bee8235613cf3565b905092915050565b600060208284031215612c0857600080fd5b6000612c1684828501612aea565b91505092915050565b60008060408385031215612c3257600080fd5b6000612c4085828601612aea565b9250506020612c5185828601612aea565b9150509250929050565b600080600060608486031215612c7057600080fd5b6000612c7e86828701612aea565b9350506020612c8f86828701612aea565b925050604084013567ffffffffffffffff811115612cac57600080fd5b612cb886828701612b8e565b9150509250925092565b600080600060608486031215612cd757600080fd5b6000612ce586828701612aea565b9350506020612cf686828701612aea565b9250506040612d0786828701612be2565b9150509250925092565b60008060008060808587031215612d2757600080fd5b6000612d3587828801612aea565b9450506020612d4687828801612aea565b9350506040612d5787828801612be2565b925050606085013567ffffffffffffffff811115612d7457600080fd5b612d8087828801612b3a565b91505092959194509250565b60008060408385031215612d9f57600080fd5b6000612dad85828601612aea565b9250506020612dbe85828601612afe565b9150509250929050565b60008060408385031215612ddb57600080fd5b6000612de985828601612aea565b9250506020612dfa85828601612be2565b9150509250929050565b600060208284031215612e1657600080fd5b6000612e2484828501612b12565b91505092915050565b600060208284031215612e3f57600080fd5b6000612e4d84828501612b26565b91505092915050565b600060208284031215612e6857600080fd5b6000612e7684828501612be2565b91505092915050565b612e8881613cfd565b82525050565b612e9781613c41565b82525050565b612ea681613c41565b82525050565b612eb581613c53565b82525050565b6000612ec682613bed565b612ed08185613c0e565b9350612ee0818560208601613d42565b612ee981613d75565b840191505092915050565b6000612eff82613c03565b612f098185613c30565b9350612f19818560208601613d42565b612f2281613d75565b840191505092915050565b6000612f3882613bf8565b612f428185613c1f565b9350612f52818560208601613d42565b612f5b81613d75565b840191505092915050565b6000612f73601f83613c30565b91507f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006000830152602082019050919050565b6000612fb3601883613c30565b91507f444f45535f4e4f545f484156455f41444d494e5f524f4c4500000000000000006000830152602082019050919050565b6000612ff3602b83613c30565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b6000613059603283613c30565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006130bf601c83613c30565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006130ff602483613c30565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613165601983613c30565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006131a5602c83613c30565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061320b603883613c30565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613271602a83613c30565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006132d7602983613c30565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061333d602183613c30565b91507f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006133a3602083613c30565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006133e3602c83613c30565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000613449602283613c30565b91507f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006134af602983613c30565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613515602f83613c30565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b600061357b601783613c30565b91507f444f45535f4e4f545f484156455f555345525f524f4c450000000000000000006000830152602082019050919050565b60006135bb602183613c30565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613621603183613c30565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613687602c83613c30565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b60006136ed602583613c30565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060808301600083015161375e60008601826137a9565b5060208301516137716020860182612e8e565b5060408301516137846040860182612e8e565b506060830151848203606086015261379c8282612f2d565b9150508091505092915050565b6137b281613c7f565b82525050565b6137c181613c7f565b82525050565b60006020820190506137dc6000830184612e9d565b92915050565b60006080820190506137f76000830187612e7f565b6138046020830186612e9d565b61381160408301856137b8565b81810360608301526138238184612ebb565b905095945050505050565b60006020820190506138436000830184612eac565b92915050565b600060208201905081810360008301526138638184612ef4565b905092915050565b6000602082019050818103600083015261388481612f66565b9050919050565b600060208201905081810360008301526138a481612fa6565b9050919050565b600060208201905081810360008301526138c481612fe6565b9050919050565b600060208201905081810360008301526138e48161304c565b9050919050565b60006020820190508181036000830152613904816130b2565b9050919050565b60006020820190508181036000830152613924816130f2565b9050919050565b6000602082019050818103600083015261394481613158565b9050919050565b6000602082019050818103600083015261396481613198565b9050919050565b60006020820190508181036000830152613984816131fe565b9050919050565b600060208201905081810360008301526139a481613264565b9050919050565b600060208201905081810360008301526139c4816132ca565b9050919050565b600060208201905081810360008301526139e481613330565b9050919050565b60006020820190508181036000830152613a0481613396565b9050919050565b60006020820190508181036000830152613a24816133d6565b9050919050565b60006020820190508181036000830152613a448161343c565b9050919050565b60006020820190508181036000830152613a64816134a2565b9050919050565b60006020820190508181036000830152613a8481613508565b9050919050565b60006020820190508181036000830152613aa48161356e565b9050919050565b60006020820190508181036000830152613ac4816135ae565b9050919050565b60006020820190508181036000830152613ae481613614565b9050919050565b60006020820190508181036000830152613b048161367a565b9050919050565b60006020820190508181036000830152613b24816136e0565b9050919050565b60006020820190508181036000830152613b458184613746565b905092915050565b6000602082019050613b6260008301846137b8565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613b8b57600080fd5b8060405250919050565b600067ffffffffffffffff821115613bac57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613bd857600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613c4c82613c5f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613c9482613cd3565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613d0882613d0f565b9050919050565b6000613d1a82613d21565b9050919050565b6000613d2c82613c5f565b9050919050565b82818337600083830152505050565b60005b83811015613d60578082015181840152602081019050613d45565b83811115613d6f576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820517bdcae0b30f35614c79883a0aa0d41f900e66f05b3a7c77e30fabea61f550a6c6578706572696d656e74616cf50037",
  "sourceMap": "349:826:1:-;;;453:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;453:62:1;794:254:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40:9;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::12;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;874:4:14;866:5;:12;;;;;;;;;;;;:::i;:::-;;898:6;888:7;:16;;;;;;;;;;;;:::i;:::-;;992:49;728:10;1011:29;;992:18;;;:49;;:::i;:::-;794:254;;1357:51:13;1172:10;1376:31;;1357:18;;;:51;;:::i;:::-;294:20:3;303:10;294:8;;;:20;;:::i;:::-;335:21:2;345:10;335:9;;;:21;;:::i;:::-;349:826:1;;1442:190:9;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;668:113:3:-;722:19;733:7;722:6;:10;;;;;;:19;;;;:::i;:::-;766:7;756:18;;;;;;;;;;;;668:113;:::o;976:110:2:-;1029:18;1041:5;1029:7;:11;;;;;;:18;;;;:::i;:::-;1073:5;1062:17;;;;;;;;;;;;976:110;:::o;260:175:7:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;349:826:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:364:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:66;262:1;257:3;253:11;246:87;361:2;356:3;352:12;345:19;;152:218;;;;379:364;;539:67;603:2;598:3;539:67;;;532:74;;639:66;635:1;630:3;626:11;619:87;734:2;729:3;725:12;718:19;;525:218;;;;752:465;;912:67;976:2;971:3;912:67;;;905:74;;1012:66;1008:1;1003:3;999:11;992:87;1113:66;1108:2;1103:3;1099:12;1092:88;1208:2;1203:3;1199:12;1192:19;;898:319;;;;1225:407;;1416:2;1405:9;1401:18;1393:26;;1466:9;1460:4;1456:20;1452:1;1441:9;1437:17;1430:47;1491:131;1617:4;1491:131;;;1483:139;;1387:245;;;;1639:407;;1830:2;1819:9;1815:18;1807:26;;1880:9;1874:4;1870:20;1866:1;1855:9;1851:17;1844:47;1905:131;2031:4;1905:131;;;1897:139;;1801:245;;;;2053:407;;2244:2;2233:9;2229:18;2221:26;;2294:9;2288:4;2284:20;2280:1;2269:9;2265:17;2258:47;2319:131;2445:4;2319:131;;;2311:139;;2215:245;;;;2468:163;;2583:6;2578:3;2571:19;2620:4;2615:3;2611:14;2596:29;;2564:67;;;;;349:826:1;;;;;;;",
  "deployedSourceMap": "349:826:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:826:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1153:83:14;;;:::i;:::-;;;;;;;;;;;;;;;;4283:200:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3583:415;;;;;;;;;;;;;;;;:::i;:::-;;701:89:2;;;;;;;;;;;;;;;;:::i;:::-;;2171:94:13;;;:::i;:::-;;;;;;;;;;;;;;;;5929:287:12;;;;;;;;;;;;;;;;:::i;:::-;;594:101:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1789:229:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;559:103:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;796:81:2;;;;;;;;;;;;;;;;:::i;:::-;;6865:132:12;;;;;;;;;;;;;;;;:::i;:::-;;730:138:5;;;;;;;;;;;;;;;;:::i;:::-;;2603:196:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;850:129:1;;;;;;;;;;;;;;;;:::i;:::-;;2939:223:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;480:108:2;;;;;;;;;;;;;;;;:::i;:::-;;2513:207:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;439:99:4;;;:::i;:::-;;;;;;;;;;;;;;;;1345:87:14;;;:::i;:::-;;;;;;;;;;;;;;;;883::2;;;;;;;;;;;;;;;;:::i;:::-;;4776:249:12;;;;;;;;;;;;;;;;:::i;:::-;;985:188:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7720:269:12;;;;;;;;;;;;;;;;:::i;:::-;;1632:202:14;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;166:558:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5347:145:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;915:133:9;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1153:83:14:-;1192:13;1224:5;1217:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:83;:::o;4283:200:12:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;;;;;;;;;;;;;;;;;4452:15;:24;4468:7;4452:24;;;;;;;;;;;;;;;;;;;;;4445:31;;4283:200;;;:::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;3696:11;;:2;:11;;;;3688:57;;;;;;;;;;;;;;;;;;;;;;3780:5;3764:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3764:62;3756:152;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3983:7;3979:2;3963:28;;3972:5;3963:28;;;;;;;;;;;;3583:415;;;:::o;701:89:2:-;408:19;416:10;408:7;:19::i;:::-;400:56;;;;;;;;;;;;;;;;;;;;;;764:19;777:5;764:12;:19::i;:::-;701:89;:::o;2171:94:13:-;2215:7;2241:10;:17;;;;2234:24;;2171:94;:::o;5929:287:12:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;594:101:2:-;647:4;670:18;682:5;670:7;:11;;:18;;;;:::i;:::-;663:25;;594:101;;;:::o;1789:229:13:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;;;;;;;;;;;;;;;;;;;1985:12;:19;1998:5;1985:19;;;;;;;;;;;;;;;2005:5;1985:26;;;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;559:103:3:-;613:4;636:19;647:7;636:6;:10;;:19;;;;:::i;:::-;629:26;;559:103;;;:::o;796:81:2:-;408:19;416:10;408:7;:19::i;:::-;400:56;;;;;;;;;;;;;;;;;;;;;;855:15;864:5;855:8;:15::i;:::-;796:81;:::o;6865:132:12:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;730:138:5:-;408:19:2;416:10;408:7;:19::i;:::-;400:56;;;;;;;;;;;;;;;;;;;;;;784:10:5;790:3;784:5;:10::i;:::-;811;:15;822:3;811:15;;;;;;;;;;;;804:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;836:25;:13;:23;:25::i;:::-;730:138;:::o;2603:196:13:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;;;;;;;;;;;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;850:129:1:-;489:18:3;496:10;489:6;:18::i;:::-;481:54;;;;;;;;;;;;;;;;;;;;;;931:41:1;948:10;960:2;964:7;931:16;:41::i;:::-;850:129;;:::o;2939:223:12:-;2994:7;3013:13;3029:11;:20;3041:7;3029:20;;;;;;;;;;;;;;;;;;;;;3013:36;;3084:1;3067:19;;:5;:19;;;;3059:73;;;;;;;;;;;;;;;;;;;;;;3150:5;3143:12;;;2939:223;;;:::o;480:108:2:-;408:19;416:10;408:7;:19::i;:::-;400:56;;;;;;;;;;;;;;;;;;;;;;540:16;550:5;540:9;:16::i;:::-;566:15;575:5;566:8;:15::i;:::-;480:108;:::o;2513:207:12:-;2568:7;2612:1;2595:19;;:5;:19;;;;2587:74;;;;;;;;;;;;;;;;;;;;;;2679:34;:17;:24;2697:5;2679:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2672:41;;2513:207;;;:::o;439:99:4:-;482:7;508:23;:13;:21;:23::i;:::-;501:30;;439:99;:::o;1345:87:14:-;1386:13;1418:7;1411:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:87;:::o;883::2:-;408:19;416:10;408:7;:19::i;:::-;400:56;;;;;;;;;;;;;;;;;;;;;;945:18;957:5;945:11;:18::i;:::-;883:87;:::o;4776:249:12:-;4861:12;:10;:12::i;:::-;4855:18;;:2;:18;;;;4847:56;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;4914:32;;;;;;;;;;;;;;;:36;4947:2;4914:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5005:2;4976:42;;4991:12;:10;:12::i;:::-;4976:42;;;5009:8;4976:42;;;;;;;;;;;;;;;4776:249;;:::o;985:188:1:-;1100:22;;:::i;:::-;1073:8;568:14;585:19;593:10;585:7;:19::i;:::-;568:36;;614:15;671:10;632:49;;648:17;656:8;648:7;:17::i;:::-;632:49;;;614:67;;801:9;:24;;;;815:10;814:11;801:24;793:33;;;;;;1146:10;:20;1157:8;1146:20;;;;;;;;;;;1138:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:188;;;;;;:::o;7720:269:12:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1632:202:14:-;1690:13;1723:16;1731:7;1723;:16::i;:::-;1715:76;;;;;;;;;;;;;;;;;;;;;;1808:10;:19;1819:7;1808:19;;;;;;;;;;;1801:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:202;;;:::o;166:558:5:-;340:7;408:19:2;416:10;408:7;:19::i;:::-;400:56;;;;;;;;;;;;;;;;;;;;;;290:5:5;382:17:3;393:5;382:6;:10;;:17;;;;:::i;:::-;374:53;;;;;;;;;;;;;;;;;;;;;;318:3:5;382:17:3;393:5;382:6;:10;;:17;;;;:::i;:::-;374:53;;;;;;;;;;;;;;;;;;;;;;363:21:5;387:23;:13;:21;:23::i;:::-;363:47;;420:31;430:5;437:13;420:9;:31::i;:::-;462;;:::i;:::-;496:104;;;;;;;;519:13;496:104;;;;546:5;496:104;;;;;;565:3;496:104;;;;;;582:8;496:104;;;462:138;;638:14;610:10;:25;621:13;610:25;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;662:25;:13;:23;:25::i;:::-;704:13;697:20;;;;437:1:3;466::2;166:558:5;;;;;:::o;5347:145:12:-;5427:4;5450:18;:25;5469:5;5450:25;;;;;;;;;;;;;;;:35;5476:8;5450:35;;;;;;;;;;;;;;;;;;;;;;;;;5443:42;;5347:145;;;;:::o;9158:152::-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;788:96:6:-;833:15;867:10;860:17;;788:96;:::o;1092:118:2:-;1148:21;1163:5;1148:7;:14;;:21;;;;:::i;:::-;1197:5;1184:19;;;;;;;;;;;;1092:118;:::o;9671:329:12:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;9905:16;;:7;:16;;;:51;;;;9949:7;9925:31;;:20;9937:7;9925:11;:20::i;:::-;:31;;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9905:87;9897:96;;;9671:329;;;;:::o;3174:239:13:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;:::-;3174:239;;;:::o;779:200:7:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;668:113:3:-;722:19;733:7;722:6;:10;;:19;;;;:::i;:::-;766:7;756:18;;;;;;;;;;;;668:113;:::o;12814:90:12:-;12865:32;12871:16;12879:7;12871;:16::i;:::-;12889:7;12865:5;:32::i;:::-;12814:90;:::o;1278:108:8:-;1358:21;1377:1;1358:7;:14;;;:18;;:21;;;;:::i;:::-;1341:7;:14;;:38;;;;1278:108;:::o;976:110:2:-;1029:18;1041:5;1029:7;:11;;:18;;;;:::i;:::-;1073:5;1062:17;;;;;;;;;;;;976:110;:::o;1065:112:8:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;787:115:3:-;842:20;856:5;842:6;:13;;:20;;;;:::i;:::-;889:5;877:18;;;;;;;;;;;;787:115;:::o;8694:269:12:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;;;;;;;;;;;;;;;;;8694:269;;;;:::o;10529:100::-;10596:26;10606:2;10610:7;10596:26;;;;;;;;;;;;:9;:26::i;:::-;10529:100;;:::o;1183:89:8:-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;510:180:7:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;13281:447:12:-;13394:4;13374:24;;:16;13382:7;13374;:16::i;:::-;:24;;;13366:78;;;;;;;;;;;;;;;;;;;;;;13476:1;13462:16;;:2;:16;;;;13454:65;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;13564:35;:17;:23;13582:4;13564:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13609:33;:17;:21;13627:2;13609:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13676:2;13653:11;:20;13665:7;13653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13713:7;13709:2;13694:27;;13703:4;13694:27;;;;;;;;;;;;13281:447;;;:::o;6284:1128:13:-;6546:22;6571:32;6601:1;6571:12;:18;6584:4;6571:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6546:57;;6613:18;6634:17;:26;6652:7;6634:26;;;;;;;;;;;;6613:47;;6778:14;6764:10;:28;6760:323;;6808:19;6830:12;:18;6843:4;6830:18;;;;;;;;;;;;;;;6849:14;6830:34;;;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;6879:18;;;;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;:44;;;;7028:10;6995:17;:30;7013:11;6995:30;;;;;;;;;;;:43;;;;6760:323;;7169:12;:18;7182:4;7169:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6284:1128;;;;:::o;5128:183::-;5241:12;:16;5254:2;5241:16;;;;;;;;;;;;;;;:23;;;;5212:17;:26;5230:7;5212:26;;;;;;;;;;;:52;;;;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;5296:7;5274:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5274:30:13;;;;;;;;;;;;;;;;;;;;;;5128:183;;:::o;260:175:7:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;4141:364:13:-;4207:27;4219:5;4226:7;4207:11;:27::i;:::-;4245:48;4278:5;4285:7;4245:32;:48::i;:::-;4441:1;4412:17;:26;4430:7;4412:26;;;;;;;;;;;:30;;;;4453:45;4490:7;4453:36;:45::i;:::-;4141:364;;:::o;1274:134:11:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;14317:349:12:-;14438:4;14463:15;:2;:13;;;:15::i;:::-;14458:58;;14501:4;14494:11;;;;14458:58;14526:13;14558:2;14542:36;;;14579:12;:10;:12::i;:::-;14593:4;14599:7;14608:5;14542:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14542:72:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14542:72:12;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14542:72:12;;;;;;;;;14526:88;;754:10;14642:16;;14632:26;;;:6;:26;;;;14624:35;;;14317:349;;;;;;;:::o;11230:239::-;11317:18;11323:2;11327:7;11317:5;:18::i;:::-;11353:54;11384:1;11388:2;11392:7;11401:5;11353:22;:54::i;:::-;11345:117;;;;;;;;;;;;;;;;;;;;;;11230:239;;;:::o;14828:171::-;14927:1;14891:38;;:15;:24;14907:7;14891:24;;;;;;;;;;;;;;;;;;;;;:38;;;14887:106;;14980:1;14945:15;:24;14961:7;14945:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;14887:106;14828:171;:::o;2558:240:14:-;2624:27;2636:5;2643:7;2624:11;:27::i;:::-;2738:1;2707:10;:19;2718:7;2707:19;;;;;;;;;;;2701:33;;;;;;;;;;;;;;;;:38;2697:95;;2762:10;:19;2773:7;2762:19;;;;;;;;;;;;2755:26;;;;:::i;:::-;2697:95;2558:240;;:::o;7700:1064:13:-;7949:22;7974:24;7996:1;7974:10;:17;;;;:21;;:24;;;;:::i;:::-;7949:49;;8008:18;8029:15;:24;8045:7;8029:24;;;;;;;;;;;;8008:45;;8375:19;8397:10;8408:14;8397:26;;;;;;;;;;;;;;;;8375:48;;8459:11;8434:10;8445;8434:22;;;;;;;;;;;;;;;:36;;;;8569:10;8538:15;:28;8554:11;8538:28;;;;;;;;;;;:41;;;;8700:10;:19;;;;;;;;;;;;:::i;:::-;;8756:1;8729:15;:24;8745:7;8729:24;;;;;;;;;;;:28;;;;7700:1064;;;;:::o;1732:187:11:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;557:797:19:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o;3670:196:13:-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;:::-;3670:196;;:::o;12309:324:12:-;12403:5;12383:25;;:16;12391:7;12383;:16::i;:::-;:25;;;12375:75;;;;;;;;;;;;;;;;;;;;;;12461:23;12476:7;12461:14;:23::i;:::-;12495:36;:17;:24;12513:5;12495:24;;;;;;;;;;;;;;;:34;:36::i;:::-;12572:1;12541:11;:20;12553:7;12541:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;12618:7;12614:1;12590:36;;12599:5;12590:36;;;;;;;;;;;;12309:324;;:::o;11714:327::-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;5506:161:13:-;5609:10;:17;;;;5582:15;:24;5598:7;5582:24;;;;;;;;;;;:44;;;;5636:10;5652:7;5636:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5636:24:13;;;;;;;;;;;;;;;;;;;;;;5506:161;:::o;349:826:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:112;;194:43;229:6;216:20;194:43;;;185:52;;179:63;;;;;249:116;;315:45;352:6;339:20;315:45;;;306:54;;300:65;;;;;372:120;;449:38;479:6;473:13;449:38;;;440:47;;434:58;;;;;500:440;;601:3;594:4;586:6;582:17;578:27;568:2;;619:1;616;609:12;568:2;656:6;643:20;678:64;693:48;734:6;693:48;;;678:64;;;669:73;;762:6;755:5;748:21;798:4;790:6;786:17;831:4;824:5;820:16;866:3;857:6;852:3;848:16;845:25;842:2;;;883:1;880;873:12;842:2;893:41;927:6;922:3;917;893:41;;;561:379;;;;;;;;949:442;;1051:3;1044:4;1036:6;1032:17;1028:27;1018:2;;1069:1;1066;1059:12;1018:2;1106:6;1093:20;1128:65;1143:49;1185:6;1143:49;;;1128:65;;;1119:74;;1213:6;1206:5;1199:21;1249:4;1241:6;1237:17;1282:4;1275:5;1271:16;1317:3;1308:6;1303:3;1299:16;1296:25;1293:2;;;1334:1;1331;1324:12;1293:2;1344:41;1378:6;1373:3;1368;1344:41;;;1011:380;;;;;;;;1399:118;;1466:46;1504:6;1491:20;1466:46;;;1457:55;;1451:66;;;;;1524:241;;1628:2;1616:9;1607:7;1603:23;1599:32;1596:2;;;1644:1;1641;1634:12;1596:2;1679:1;1696:53;1741:7;1732:6;1721:9;1717:22;1696:53;;;1686:63;;1658:97;1590:175;;;;;1772:366;;;1893:2;1881:9;1872:7;1868:23;1864:32;1861:2;;;1909:1;1906;1899:12;1861:2;1944:1;1961:53;2006:7;1997:6;1986:9;1982:22;1961:53;;;1951:63;;1923:97;2051:2;2069:53;2114:7;2105:6;2094:9;2090:22;2069:53;;;2059:63;;2030:98;1855:283;;;;;;2145:597;;;;2293:2;2281:9;2272:7;2268:23;2264:32;2261:2;;;2309:1;2306;2299:12;2261:2;2344:1;2361:53;2406:7;2397:6;2386:9;2382:22;2361:53;;;2351:63;;2323:97;2451:2;2469:53;2514:7;2505:6;2494:9;2490:22;2469:53;;;2459:63;;2430:98;2587:2;2576:9;2572:18;2559:32;2611:18;2603:6;2600:30;2597:2;;;2643:1;2640;2633:12;2597:2;2663:63;2718:7;2709:6;2698:9;2694:22;2663:63;;;2653:73;;2538:194;2255:487;;;;;;2749:491;;;;2887:2;2875:9;2866:7;2862:23;2858:32;2855:2;;;2903:1;2900;2893:12;2855:2;2938:1;2955:53;3000:7;2991:6;2980:9;2976:22;2955:53;;;2945:63;;2917:97;3045:2;3063:53;3108:7;3099:6;3088:9;3084:22;3063:53;;;3053:63;;3024:98;3153:2;3171:53;3216:7;3207:6;3196:9;3192:22;3171:53;;;3161:63;;3132:98;2849:391;;;;;;3247:721;;;;;3411:3;3399:9;3390:7;3386:23;3382:33;3379:2;;;3428:1;3425;3418:12;3379:2;3463:1;3480:53;3525:7;3516:6;3505:9;3501:22;3480:53;;;3470:63;;3442:97;3570:2;3588:53;3633:7;3624:6;3613:9;3609:22;3588:53;;;3578:63;;3549:98;3678:2;3696:53;3741:7;3732:6;3721:9;3717:22;3696:53;;;3686:63;;3657:98;3814:2;3803:9;3799:18;3786:32;3838:18;3830:6;3827:30;3824:2;;;3870:1;3867;3860:12;3824:2;3890:62;3944:7;3935:6;3924:9;3920:22;3890:62;;;3880:72;;3765:193;3373:595;;;;;;;;3975:360;;;4093:2;4081:9;4072:7;4068:23;4064:32;4061:2;;;4109:1;4106;4099:12;4061:2;4144:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;;;4151:63;;4123:97;4251:2;4269:50;4311:7;4302:6;4291:9;4287:22;4269:50;;;4259:60;;4230:95;4055:280;;;;;;4342:366;;;4463:2;4451:9;4442:7;4438:23;4434:32;4431:2;;;4479:1;4476;4469:12;4431:2;4514:1;4531:53;4576:7;4567:6;4556:9;4552:22;4531:53;;;4521:63;;4493:97;4621:2;4639:53;4684:7;4675:6;4664:9;4660:22;4639:53;;;4629:63;;4600:98;4425:283;;;;;;4715:239;;4818:2;4806:9;4797:7;4793:23;4789:32;4786:2;;;4834:1;4831;4824:12;4786:2;4869:1;4886:52;4930:7;4921:6;4910:9;4906:22;4886:52;;;4876:62;;4848:96;4780:174;;;;;4961:261;;5075:2;5063:9;5054:7;5050:23;5046:32;5043:2;;;5091:1;5088;5081:12;5043:2;5126:1;5143:63;5198:7;5189:6;5178:9;5174:22;5143:63;;;5133:73;;5105:107;5037:185;;;;;5229:241;;5333:2;5321:9;5312:7;5308:23;5304:32;5301:2;;;5349:1;5346;5339:12;5301:2;5384:1;5401:53;5446:7;5437:6;5426:9;5422:22;5401:53;;;5391:63;;5363:97;5295:175;;;;;5477:142;5568:45;5607:5;5568:45;;;5563:3;5556:58;5550:69;;;5626:110;5699:31;5724:5;5699:31;;;5694:3;5687:44;5681:55;;;5743:120;5826:31;5851:5;5826:31;;;5821:3;5814:44;5808:55;;;5870:111;5947:28;5969:5;5947:28;;;5942:3;5935:41;5929:52;;;5988:343;;6098:38;6130:5;6098:38;;;6148:70;6211:6;6206:3;6148:70;;;6141:77;;6223:52;6268:6;6263:3;6256:4;6249:5;6245:16;6223:52;;;6296:29;6318:6;6296:29;;;6291:3;6287:39;6280:46;;6078:253;;;;;;6338:347;;6450:39;6483:5;6450:39;;;6501:71;6565:6;6560:3;6501:71;;;6494:78;;6577:52;6622:6;6617:3;6610:4;6603:5;6599:16;6577:52;;;6650:29;6672:6;6650:29;;;6645:3;6641:39;6634:46;;6430:255;;;;;;6692:319;;6790:35;6819:5;6790:35;;;6837:61;6891:6;6886:3;6837:61;;;6830:68;;6903:52;6948:6;6943:3;6936:4;6929:5;6925:16;6903:52;;;6976:29;6998:6;6976:29;;;6971:3;6967:39;6960:46;;6770:241;;;;;;7019:364;;7179:67;7243:2;7238:3;7179:67;;;7172:74;;7279:66;7275:1;7270:3;7266:11;7259:87;7374:2;7369:3;7365:12;7358:19;;7165:218;;;;7392:364;;7552:67;7616:2;7611:3;7552:67;;;7545:74;;7652:66;7648:1;7643:3;7639:11;7632:87;7747:2;7742:3;7738:12;7731:19;;7538:218;;;;7765:465;;7925:67;7989:2;7984:3;7925:67;;;7918:74;;8025:66;8021:1;8016:3;8012:11;8005:87;8126:66;8121:2;8116:3;8112:12;8105:88;8221:2;8216:3;8212:12;8205:19;;7911:319;;;;8239:465;;8399:67;8463:2;8458:3;8399:67;;;8392:74;;8499:66;8495:1;8490:3;8486:11;8479:87;8600:66;8595:2;8590:3;8586:12;8579:88;8695:2;8690:3;8686:12;8679:19;;8385:319;;;;8713:364;;8873:67;8937:2;8932:3;8873:67;;;8866:74;;8973:66;8969:1;8964:3;8960:11;8953:87;9068:2;9063:3;9059:12;9052:19;;8859:218;;;;9086:465;;9246:67;9310:2;9305:3;9246:67;;;9239:74;;9346:66;9342:1;9337:3;9333:11;9326:87;9447:66;9442:2;9437:3;9433:12;9426:88;9542:2;9537:3;9533:12;9526:19;;9232:319;;;;9560:364;;9720:67;9784:2;9779:3;9720:67;;;9713:74;;9820:66;9816:1;9811:3;9807:11;9800:87;9915:2;9910:3;9906:12;9899:19;;9706:218;;;;9933:465;;10093:67;10157:2;10152:3;10093:67;;;10086:74;;10193:66;10189:1;10184:3;10180:11;10173:87;10294:66;10289:2;10284:3;10280:12;10273:88;10389:2;10384:3;10380:12;10373:19;;10079:319;;;;10407:465;;10567:67;10631:2;10626:3;10567:67;;;10560:74;;10667:66;10663:1;10658:3;10654:11;10647:87;10768:66;10763:2;10758:3;10754:12;10747:88;10863:2;10858:3;10854:12;10847:19;;10553:319;;;;10881:465;;11041:67;11105:2;11100:3;11041:67;;;11034:74;;11141:66;11137:1;11132:3;11128:11;11121:87;11242:66;11237:2;11232:3;11228:12;11221:88;11337:2;11332:3;11328:12;11321:19;;11027:319;;;;11355:465;;11515:67;11579:2;11574:3;11515:67;;;11508:74;;11615:66;11611:1;11606:3;11602:11;11595:87;11716:66;11711:2;11706:3;11702:12;11695:88;11811:2;11806:3;11802:12;11795:19;;11501:319;;;;11829:465;;11989:67;12053:2;12048:3;11989:67;;;11982:74;;12089:66;12085:1;12080:3;12076:11;12069:87;12190:66;12185:2;12180:3;12176:12;12169:88;12285:2;12280:3;12276:12;12269:19;;11975:319;;;;12303:364;;12463:67;12527:2;12522:3;12463:67;;;12456:74;;12563:66;12559:1;12554:3;12550:11;12543:87;12658:2;12653:3;12649:12;12642:19;;12449:218;;;;12676:465;;12836:67;12900:2;12895:3;12836:67;;;12829:74;;12936:66;12932:1;12927:3;12923:11;12916:87;13037:66;13032:2;13027:3;13023:12;13016:88;13132:2;13127:3;13123:12;13116:19;;12822:319;;;;13150:465;;13310:67;13374:2;13369:3;13310:67;;;13303:74;;13410:66;13406:1;13401:3;13397:11;13390:87;13511:66;13506:2;13501:3;13497:12;13490:88;13606:2;13601:3;13597:12;13590:19;;13296:319;;;;13624:465;;13784:67;13848:2;13843:3;13784:67;;;13777:74;;13884:66;13880:1;13875:3;13871:11;13864:87;13985:66;13980:2;13975:3;13971:12;13964:88;14080:2;14075:3;14071:12;14064:19;;13770:319;;;;14098:465;;14258:67;14322:2;14317:3;14258:67;;;14251:74;;14358:66;14354:1;14349:3;14345:11;14338:87;14459:66;14454:2;14449:3;14445:12;14438:88;14554:2;14549:3;14545:12;14538:19;;14244:319;;;;14572:364;;14732:67;14796:2;14791:3;14732:67;;;14725:74;;14832:66;14828:1;14823:3;14819:11;14812:87;14927:2;14922:3;14918:12;14911:19;;14718:218;;;;14945:465;;15105:67;15169:2;15164:3;15105:67;;;15098:74;;15205:66;15201:1;15196:3;15192:11;15185:87;15306:66;15301:2;15296:3;15292:12;15285:88;15401:2;15396:3;15392:12;15385:19;;15091:319;;;;15419:465;;15579:67;15643:2;15638:3;15579:67;;;15572:74;;15679:66;15675:1;15670:3;15666:11;15659:87;15780:66;15775:2;15770:3;15766:12;15759:88;15875:2;15870:3;15866:12;15859:19;;15565:319;;;;15893:465;;16053:67;16117:2;16112:3;16053:67;;;16046:74;;16153:66;16149:1;16144:3;16140:11;16133:87;16254:66;16249:2;16244:3;16240:12;16233:88;16349:2;16344:3;16340:12;16333:19;;16039:319;;;;16367:465;;16527:67;16591:2;16586:3;16527:67;;;16520:74;;16627:66;16623:1;16618:3;16614:11;16607:87;16728:66;16723:2;16718:3;16714:12;16707:88;16823:2;16818:3;16814:12;16807:19;;16513:319;;;;16917:866;;17070:4;17065:3;17061:14;17150:3;17143:5;17139:15;17133:22;17161:61;17217:3;17212;17208:13;17195:11;17161:61;;;17090:138;17300:4;17293:5;17289:16;17283:23;17312:62;17368:4;17363:3;17359:14;17346:11;17312:62;;;17238:142;17450:4;17443:5;17439:16;17433:23;17462:62;17518:4;17513:3;17509:14;17496:11;17462:62;;;17390:140;17605:4;17598:5;17594:16;17588:23;17657:3;17651:4;17647:14;17640:4;17635:3;17631:14;17624:38;17677:68;17740:4;17727:11;17677:68;;;17669:76;;17540:217;17774:4;17767:11;;17043:740;;;;;;17790:110;17863:31;17888:5;17863:31;;;17858:3;17851:44;17845:55;;;17907:120;17990:31;18015:5;17990:31;;;17985:3;17978:44;17972:55;;;18034:213;;18152:2;18141:9;18137:18;18129:26;;18166:71;18234:1;18223:9;18219:17;18210:6;18166:71;;;18123:124;;;;;18254:647;;18482:3;18471:9;18467:19;18459:27;;18497:79;18573:1;18562:9;18558:17;18549:6;18497:79;;;18587:72;18655:2;18644:9;18640:18;18631:6;18587:72;;;18670;18738:2;18727:9;18723:18;18714:6;18670:72;;;18790:9;18784:4;18780:20;18775:2;18764:9;18760:18;18753:48;18815:76;18886:4;18877:6;18815:76;;;18807:84;;18453:448;;;;;;;;18908:201;;19020:2;19009:9;19005:18;18997:26;;19034:65;19096:1;19085:9;19081:17;19072:6;19034:65;;;18991:118;;;;;19116:301;;19254:2;19243:9;19239:18;19231:26;;19304:9;19298:4;19294:20;19290:1;19279:9;19275:17;19268:47;19329:78;19402:4;19393:6;19329:78;;;19321:86;;19225:192;;;;;19424:407;;19615:2;19604:9;19600:18;19592:26;;19665:9;19659:4;19655:20;19651:1;19640:9;19636:17;19629:47;19690:131;19816:4;19690:131;;;19682:139;;19586:245;;;;19838:407;;20029:2;20018:9;20014:18;20006:26;;20079:9;20073:4;20069:20;20065:1;20054:9;20050:17;20043:47;20104:131;20230:4;20104:131;;;20096:139;;20000:245;;;;20252:407;;20443:2;20432:9;20428:18;20420:26;;20493:9;20487:4;20483:20;20479:1;20468:9;20464:17;20457:47;20518:131;20644:4;20518:131;;;20510:139;;20414:245;;;;20666:407;;20857:2;20846:9;20842:18;20834:26;;20907:9;20901:4;20897:20;20893:1;20882:9;20878:17;20871:47;20932:131;21058:4;20932:131;;;20924:139;;20828:245;;;;21080:407;;21271:2;21260:9;21256:18;21248:26;;21321:9;21315:4;21311:20;21307:1;21296:9;21292:17;21285:47;21346:131;21472:4;21346:131;;;21338:139;;21242:245;;;;21494:407;;21685:2;21674:9;21670:18;21662:26;;21735:9;21729:4;21725:20;21721:1;21710:9;21706:17;21699:47;21760:131;21886:4;21760:131;;;21752:139;;21656:245;;;;21908:407;;22099:2;22088:9;22084:18;22076:26;;22149:9;22143:4;22139:20;22135:1;22124:9;22120:17;22113:47;22174:131;22300:4;22174:131;;;22166:139;;22070:245;;;;22322:407;;22513:2;22502:9;22498:18;22490:26;;22563:9;22557:4;22553:20;22549:1;22538:9;22534:17;22527:47;22588:131;22714:4;22588:131;;;22580:139;;22484:245;;;;22736:407;;22927:2;22916:9;22912:18;22904:26;;22977:9;22971:4;22967:20;22963:1;22952:9;22948:17;22941:47;23002:131;23128:4;23002:131;;;22994:139;;22898:245;;;;23150:407;;23341:2;23330:9;23326:18;23318:26;;23391:9;23385:4;23381:20;23377:1;23366:9;23362:17;23355:47;23416:131;23542:4;23416:131;;;23408:139;;23312:245;;;;23564:407;;23755:2;23744:9;23740:18;23732:26;;23805:9;23799:4;23795:20;23791:1;23780:9;23776:17;23769:47;23830:131;23956:4;23830:131;;;23822:139;;23726:245;;;;23978:407;;24169:2;24158:9;24154:18;24146:26;;24219:9;24213:4;24209:20;24205:1;24194:9;24190:17;24183:47;24244:131;24370:4;24244:131;;;24236:139;;24140:245;;;;24392:407;;24583:2;24572:9;24568:18;24560:26;;24633:9;24627:4;24623:20;24619:1;24608:9;24604:17;24597:47;24658:131;24784:4;24658:131;;;24650:139;;24554:245;;;;24806:407;;24997:2;24986:9;24982:18;24974:26;;25047:9;25041:4;25037:20;25033:1;25022:9;25018:17;25011:47;25072:131;25198:4;25072:131;;;25064:139;;24968:245;;;;25220:407;;25411:2;25400:9;25396:18;25388:26;;25461:9;25455:4;25451:20;25447:1;25436:9;25432:17;25425:47;25486:131;25612:4;25486:131;;;25478:139;;25382:245;;;;25634:407;;25825:2;25814:9;25810:18;25802:26;;25875:9;25869:4;25865:20;25861:1;25850:9;25846:17;25839:47;25900:131;26026:4;25900:131;;;25892:139;;25796:245;;;;26048:407;;26239:2;26228:9;26224:18;26216:26;;26289:9;26283:4;26279:20;26275:1;26264:9;26260:17;26253:47;26314:131;26440:4;26314:131;;;26306:139;;26210:245;;;;26462:407;;26653:2;26642:9;26638:18;26630:26;;26703:9;26697:4;26693:20;26689:1;26678:9;26674:17;26667:47;26728:131;26854:4;26728:131;;;26720:139;;26624:245;;;;26876:407;;27067:2;27056:9;27052:18;27044:26;;27117:9;27111:4;27107:20;27103:1;27092:9;27088:17;27081:47;27142:131;27268:4;27142:131;;;27134:139;;27038:245;;;;27290:407;;27481:2;27470:9;27466:18;27458:26;;27531:9;27525:4;27521:20;27517:1;27506:9;27502:17;27495:47;27556:131;27682:4;27556:131;;;27548:139;;27452:245;;;;27704:407;;27895:2;27884:9;27880:18;27872:26;;27945:9;27939:4;27935:20;27931:1;27920:9;27916:17;27909:47;27970:131;28096:4;27970:131;;;27962:139;;27866:245;;;;28118:407;;28309:2;28298:9;28294:18;28286:26;;28359:9;28353:4;28349:20;28345:1;28334:9;28330:17;28323:47;28384:131;28510:4;28384:131;;;28376:139;;28280:245;;;;28532:365;;28702:2;28691:9;28687:18;28679:26;;28752:9;28746:4;28742:20;28738:1;28727:9;28723:17;28716:47;28777:110;28882:4;28873:6;28777:110;;;28769:118;;28673:224;;;;;28904:213;;29022:2;29011:9;29007:18;28999:26;;29036:71;29104:1;29093:9;29089:17;29080:6;29036:71;;;28993:124;;;;;29124:256;;29186:2;29180:9;29170:19;;29224:4;29216:6;29212:17;29323:6;29311:10;29308:22;29287:18;29275:10;29272:34;29269:62;29266:2;;;29344:1;29341;29334:12;29266:2;29364:10;29360:2;29353:22;29164:216;;;;;29387:258;;29530:18;29522:6;29519:30;29516:2;;;29562:1;29559;29552:12;29516:2;29606:4;29602:9;29595:4;29587:6;29583:17;29579:33;29571:41;;29635:4;29629;29625:15;29617:23;;29453:192;;;;29652:259;;29796:18;29788:6;29785:30;29782:2;;;29828:1;29825;29818:12;29782:2;29872:4;29868:9;29861:4;29853:6;29849:17;29845:33;29837:41;;29901:4;29895;29891:15;29883:23;;29719:192;;;;29918:91;;29998:5;29992:12;29982:22;;29976:33;;;;30016:88;;30093:5;30087:12;30077:22;;30071:33;;;;30111:92;;30192:5;30186:12;30176:22;;30170:33;;;;30211:162;;30325:6;30320:3;30313:19;30362:4;30357:3;30353:14;30338:29;;30306:67;;;;;30382:153;;30487:6;30482:3;30475:19;30524:4;30519:3;30515:14;30500:29;;30468:67;;;;;30544:163;;30659:6;30654:3;30647:19;30696:4;30691:3;30687:14;30672:29;;30640:67;;;;;30715:105;;30784:31;30809:5;30784:31;;;30773:42;;30767:53;;;;30827:92;;30907:5;30900:13;30893:21;30882:32;;30876:43;;;;30926:128;;31006:42;30999:5;30995:54;30984:65;;30978:76;;;;31061:79;;31130:5;31119:16;;31113:27;;;;31147:105;;31216:31;31241:5;31216:31;;;31205:42;;31199:53;;;;31259:92;;31339:5;31332:13;31325:21;31314:32;;31308:43;;;;31358:151;;31437:66;31430:5;31426:78;31415:89;;31409:100;;;;31516:128;;31596:42;31589:5;31585:54;31574:65;;31568:76;;;;31651:79;;31720:5;31709:16;;31703:27;;;;31737:129;;31824:37;31855:5;31824:37;;;31811:50;;31805:61;;;;31873:121;;31952:37;31983:5;31952:37;;;31939:50;;31933:61;;;;32001:115;;32080:31;32105:5;32080:31;;;32067:44;;32061:55;;;;32124:145;32205:6;32200:3;32195;32182:30;32261:1;32252:6;32247:3;32243:16;32236:27;32175:94;;;;32278:268;32343:1;32350:101;32364:6;32361:1;32358:13;32350:101;;;32440:1;32435:3;32431:11;32425:18;32421:1;32416:3;32412:11;32405:39;32386:2;32383:1;32379:10;32374:15;;32350:101;;;32466:6;32463:1;32460:13;32457:2;;;32531:1;32522:6;32517:3;32513:16;32506:27;32457:2;32327:219;;;;;32554:97;;32642:2;32638:7;32633:2;32626:5;32622:14;32618:28;32608:38;;32602:49;;;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\n// see https://github.com/OpenZeppelin/simplezeppelin-solidity/tree/master/contracts/token/ERC721\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\";\nimport \"./simple-token/MintableBurnableSimpleToken.sol\";\n\ncontract SimpleToken is\n    ERC721Metadata,\n    ERC721Enumerable,\n    MintableBurnableSimpleToken\n{\n    constructor() public ERC721Metadata(\"SimpleToken\", \"spTkn\") {}\n\n    modifier hasAccess(uint256 _tokenId) {\n        bool isAnAdmin = isAdmin(msg.sender);\n        bool isTheOwner = address(uint160(ownerOf(_tokenId))) == msg.sender;\n\n        // TODO: Check how to compare these 2 addresses\n        // require(isAnAdmin || isTheOwner);\n        require(isAnAdmin || !isTheOwner);\n        _;\n    }\n\n    function safeTransferFrom(address to, uint256 tokenId) public onlyUser {\n        safeTransferFrom(msg.sender, to, tokenId);\n    }\n\n    function getSimpleToken(uint256 _tokenId)\n        public\n        view\n        hasAccess(_tokenId)\n        returns (SimpleTkn memory token)\n    {\n        token = _tokenList[_tokenId];\n    }\n}\n",
  "sourcePath": "/home/paf/Documents/wtf/ERC721/contracts/SimpleToken.sol",
  "ast": {
    "absolutePath": "/home/paf/Documents/wtf/ERC721/contracts/SimpleToken.sol",
    "exportedSymbols": {
      "SimpleToken": [
        144
      ]
    },
    "id": 145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 2014,
        "src": "157:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 1882,
        "src": "223:67:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/paf/Documents/wtf/ERC721/contracts/simple-token/MintableBurnableSimpleToken.sol",
        "file": "./simple-token/MintableBurnableSimpleToken.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 499,
        "src": "291:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2013,
              "src": "377:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2013",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "377:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1881,
              "src": "397:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1881",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "397:16:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "MintableBurnableSimpleToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 498,
              "src": "419:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableBurnableSimpleToken_$498",
                "typeString": "contract MintableBurnableSimpleToken"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "419:27:1"
          }
        ],
        "contractDependencies": [
          282,
          379,
          414,
          498,
          525,
          707,
          717,
          1541,
          1881,
          2013,
          2116,
          2143,
          2166
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144,
          498,
          282,
          379,
          414,
          1881,
          2143,
          2013,
          2166,
          1541,
          2116,
          707,
          717,
          525
        ],
        "name": "SimpleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "513:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53696d706c65546f6b656e",
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "489:13:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                      "typeString": "literal_string \"SimpleToken\""
                    },
                    "value": "SimpleToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "7370546b6e",
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "504:7:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85ceee57e00b84e180f1ab63eb328d25d0110b420552a610a936b1d39a7fad30",
                      "typeString": "literal_string \"spTkn\""
                    },
                    "value": "spTkn"
                  }
                ],
                "id": 73,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 70,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2013,
                  "src": "474:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2013_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "474:38:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:2:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:1"
            },
            "scope": 144,
            "src": "453:62:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "558:286:1",
              "statements": [
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "name": "isAnAdmin",
                      "nodeType": "VariableDeclaration",
                      "scope": 108,
                      "src": "568:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "568:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "593:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "593:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 82,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "585:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "568:36:1"
                },
                {
                  "assignments": [
                    88
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88,
                      "name": "isTheOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 108,
                      "src": "614:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "614:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 92,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "656:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 91,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1008
                                ],
                                "referencedDeclaration": 1008,
                                "src": "648:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "648:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "640:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": "uint160"
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "640:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "632:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "632:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2272,
                        "src": "671:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "671:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "632:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "614:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "isAnAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "801:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "814:11:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "isTheOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "815:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "801:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2275,
                        2276
                      ],
                      "referencedDeclaration": 2275,
                      "src": "793:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "793:33:1"
                },
                {
                  "id": 107,
                  "nodeType": "PlaceholderStatement",
                  "src": "836:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 109,
            "name": "hasAccess",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "540:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:18:1"
            },
            "src": "521:323:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "921:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "948:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "948:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "960:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "964:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 118,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        126,
                        1164,
                        1192
                      ],
                      "referencedDeclaration": 1164,
                      "src": "931:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "931:41:1"
                }
              ]
            },
            "documentation": null,
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "onlyUser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "912:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "912:8:1"
              }
            ],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "876:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "888:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:29:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:1"
            },
            "scope": 144,
            "src": "850:129:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1128:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1138:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SimpleTkn_$397_memory_ptr",
                        "typeString": "struct BasicSimpleToken.SimpleTkn memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "_tokenList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "1146:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SimpleTkn_$397_storage_$",
                          "typeString": "mapping(uint256 => struct BasicSimpleToken.SimpleTkn storage ref)"
                        }
                      },
                      "id": 139,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1157:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1146:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SimpleTkn_$397_storage",
                        "typeString": "struct BasicSimpleToken.SimpleTkn storage ref"
                      }
                    },
                    "src": "1138:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SimpleTkn_$397_memory_ptr",
                      "typeString": "struct BasicSimpleToken.SimpleTkn memory"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 131,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 128,
                    "src": "1073:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 132,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "hasAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 109,
                  "src": "1063:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1063:19:1"
              }
            ],
            "name": "getSimpleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1009:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1008:18:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1100:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SimpleTkn_$397_memory_ptr",
                    "typeString": "struct BasicSimpleToken.SimpleTkn"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 133,
                    "name": "SimpleTkn",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 397,
                    "src": "1100:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SimpleTkn_$397_storage_ptr",
                      "typeString": "struct BasicSimpleToken.SimpleTkn"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:24:1"
            },
            "scope": 144,
            "src": "985:188:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 145,
        "src": "349:826:1"
      }
    ],
    "src": "0:1176:1"
  },
  "legacyAST": {
    "absolutePath": "/home/paf/Documents/wtf/ERC721/contracts/SimpleToken.sol",
    "exportedSymbols": {
      "SimpleToken": [
        144
      ]
    },
    "id": 145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 2014,
        "src": "157:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 1882,
        "src": "223:67:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/paf/Documents/wtf/ERC721/contracts/simple-token/MintableBurnableSimpleToken.sol",
        "file": "./simple-token/MintableBurnableSimpleToken.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 499,
        "src": "291:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2013,
              "src": "377:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2013",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "377:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1881,
              "src": "397:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1881",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "397:16:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "MintableBurnableSimpleToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 498,
              "src": "419:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableBurnableSimpleToken_$498",
                "typeString": "contract MintableBurnableSimpleToken"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "419:27:1"
          }
        ],
        "contractDependencies": [
          282,
          379,
          414,
          498,
          525,
          707,
          717,
          1541,
          1881,
          2013,
          2116,
          2143,
          2166
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144,
          498,
          282,
          379,
          414,
          1881,
          2143,
          2013,
          2166,
          1541,
          2116,
          707,
          717,
          525
        ],
        "name": "SimpleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "513:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53696d706c65546f6b656e",
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "489:13:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                      "typeString": "literal_string \"SimpleToken\""
                    },
                    "value": "SimpleToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "7370546b6e",
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "504:7:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85ceee57e00b84e180f1ab63eb328d25d0110b420552a610a936b1d39a7fad30",
                      "typeString": "literal_string \"spTkn\""
                    },
                    "value": "spTkn"
                  }
                ],
                "id": 73,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 70,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2013,
                  "src": "474:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2013_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "474:38:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:2:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:1"
            },
            "scope": 144,
            "src": "453:62:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "558:286:1",
              "statements": [
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "name": "isAnAdmin",
                      "nodeType": "VariableDeclaration",
                      "scope": 108,
                      "src": "568:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "568:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "593:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "593:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 82,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "585:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "568:36:1"
                },
                {
                  "assignments": [
                    88
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88,
                      "name": "isTheOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 108,
                      "src": "614:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "614:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 92,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "656:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 91,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1008
                                ],
                                "referencedDeclaration": 1008,
                                "src": "648:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "648:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "640:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": "uint160"
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "640:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "632:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "632:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2272,
                        "src": "671:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "671:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "632:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "614:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "isAnAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "801:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "814:11:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "isTheOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "815:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "801:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2275,
                        2276
                      ],
                      "referencedDeclaration": 2275,
                      "src": "793:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "793:33:1"
                },
                {
                  "id": 107,
                  "nodeType": "PlaceholderStatement",
                  "src": "836:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 109,
            "name": "hasAccess",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "540:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:18:1"
            },
            "src": "521:323:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "921:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "948:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "948:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "960:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "964:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 118,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        126,
                        1164,
                        1192
                      ],
                      "referencedDeclaration": 1164,
                      "src": "931:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "931:41:1"
                }
              ]
            },
            "documentation": null,
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 115,
                  "name": "onlyUser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "912:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "912:8:1"
              }
            ],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "876:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "888:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:29:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:1"
            },
            "scope": 144,
            "src": "850:129:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1128:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1138:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SimpleTkn_$397_memory_ptr",
                        "typeString": "struct BasicSimpleToken.SimpleTkn memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "_tokenList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "1146:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SimpleTkn_$397_storage_$",
                          "typeString": "mapping(uint256 => struct BasicSimpleToken.SimpleTkn storage ref)"
                        }
                      },
                      "id": 139,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1157:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1146:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SimpleTkn_$397_storage",
                        "typeString": "struct BasicSimpleToken.SimpleTkn storage ref"
                      }
                    },
                    "src": "1138:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SimpleTkn_$397_memory_ptr",
                      "typeString": "struct BasicSimpleToken.SimpleTkn memory"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 131,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 128,
                    "src": "1073:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 132,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "hasAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 109,
                  "src": "1063:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1063:19:1"
              }
            ],
            "name": "getSimpleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1009:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1008:18:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1100:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SimpleTkn_$397_memory_ptr",
                    "typeString": "struct BasicSimpleToken.SimpleTkn"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 133,
                    "name": "SimpleTkn",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 397,
                    "src": "1100:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SimpleTkn_$397_storage_ptr",
                      "typeString": "struct BasicSimpleToken.SimpleTkn"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:24:1"
            },
            "scope": 144,
            "src": "985:188:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 145,
        "src": "349:826:1"
      }
    ],
    "src": "0:1176:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-01-15T09:03:05.341Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}